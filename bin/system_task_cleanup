#!/bin/env python

import imp
import os
import sys

import MySQLdb as mysql

CONFIG_FILE = '/data/cortex/cortex.conf'

def load_config(): 
	d = imp.new_module('config')
	d.__file__ = CONFIG_FILE
	try:
		with open(CONFIG_FILE) as config_file:
			exec(compile(config_file.read(), CONFIG_FILE, 'exec'), d.__dict__)
	except IOError as e:
		print 'Unable to load configuration file ' + e.strerror
		sys.exit(1)
	config = {}

	for key in dir(d):
		if key.isupper():
			config[key] = getattr(d, key)

	## ensure we have required config options
	for wkey in ['MYSQL_USER', 'MYSQL_PASS', 'MYSQL_NAME', 'MYSQL_PORT']:
		if not wkey in config.keys():
			print "Missing configuation option: " + wkey
			sys.exit(1)

	return config

if __name__ == "__main__":
	config = load_config()

	# Connect to the database
	db = mysql.connect(host=config['MYSQL_HOST'], port=config['MYSQL_PORT'], user=config['MYSQL_USER'], passwd=config['MYSQL_PASS'], db=config['MYSQL_NAME'])
	cur = db.cursor(mysql.cursors.DictCursor)

	# Query for jobs which are over a month old and were started by the scheduler user
	cur.execute('SELECT `id` FROM `tasks` WHERE `start` < DATE_SUB(NOW(), INTERVAL 1 MONTH) AND `username` = %s', ("scheduler",))
	rows = cur.fetchall()
	
	# Iterate over each task that needs expiring
	for row in rows:
		# Delete events relating to the task
		cur.execute('DELETE FROM `events` WHERE `username` = %s AND `source` = %s AND `related_id` = %s', ("scheduler", "neocortex.task", row['id']))

		# Delete the task
		cur.execute('DELETE FROM `tasks` WHERE `id` = %s', (row['id'],))

	# Save our changes
	db.commit()
